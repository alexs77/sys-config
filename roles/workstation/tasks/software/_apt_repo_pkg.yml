# Usage:
  # ansible.builtin.include_tasks: _apt_repo_pkg.yml
  # loop:
  #   - { name: "Display Name", 
  #       flag: flag_from_host_var_file,
  #       key_url: url of key file,
  #       repo: "sources.list line",
  #       repo_file: Sets the name of the source list file in sources.list.d,
  #       pkg: name-of-pkg }

# Search for pkg in apts list of dicts:
# (apts | selectattr('name', 'equalto', package.name) | first)
# https://www.reddit.com/r/ansible/comments/rkpt61/get_element_in_list_of_dictionaries/

# remove item?
# ⇒ package.state in ['false', 'absent', 'no', false]
# ⇒ (package.state in ['false', 'absent', 'no', false]) | ternary('absent', 'present')

- name: "software | {{ package.name }} | repository key"
  tags: packages,apt,workstation-packages
  ansible.builtin.apt_key:
    url: "{{ (apts | selectattr('name', 'equalto', package.name) | first).key_url }}"
    state: "{{ (package.state in ['false', 'absent', 'no', false]) | ternary('absent', 'present') }}"
  when:
    - ansible_os_family == "Debian"
    - (apts | selectattr('name', 'equalto', package.name) | first).key_url is defined

- name: "software | {{ package.name }} | repository"
  tags: packages,apt,workstation-packages
  ansible.builtin.apt_repository:
    repo: "{{ (apts | selectattr('name', 'equalto', package.name) | first).repo }}"
    filename: "{{ (apts | selectattr('name', 'equalto', package.name) | first).repo_file | default(omit) }}"
    state: "{{ (package.state in ['false', 'absent', 'no', false]) | ternary('absent', 'present') }}"
  register: repo_file
  when:
    - ansible_os_family == "Debian"
    - (apts | selectattr('name', 'equalto', package.name) | first).repo is defined

- name: "software | {{ package.name }} | update sources (repo added or changed)"
  tags: packages,apt,workstation-packages
  ansible.builtin.apt:
    update_cache: yes
  changed_when: no
  when:
    - ansible_os_family == "Debian"
    - repo_file.changed

- name: "software | {{ package.name }} | package"
  tags: packages,apt,workstation-packages
  ansible.builtin.apt:
    name: "{{ (apts | selectattr('name', 'equalto', package.name) | first).pkg }}"
    state: "{{ (package.state in ['false', 'absent', 'no', false]) | ternary('absent', 'present') }}"
  when:
    - ansible_os_family == "Debian"

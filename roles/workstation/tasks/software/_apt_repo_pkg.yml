# Usage:
  # ansible.builtin.include_tasks: _apt_repo_pkg.yml
  # loop:
  #   - { name: "Display Name", 
  #       flag: flag_from_host_var_file,
  #       key_url: url of key file,
  #       repo: "sources.list line",
  #       repo_file: Sets the name of the source list file in sources.list.d,
  #       pkg: name-of-pkg }

- name: "software | {{ item.name }} | repository key"
  tags: "packages,{{ item.flag }},workstation-packages"
  ansible.builtin.apt_key:
    url: "{{ item.key_url }}"
    state: "{{ (lookup('vars', item.flag) == 'absent') | ternary('absent', 'present') }}"
  when:
    - ansible_os_family == "Debian"
    - lookup('vars', item.flag, default=false)
    - item.key_url is defined

- name: "software | {{ item.name }} | repository"
  tags: "packages,{{ item.flag }},workstation-packages"
  ansible.builtin.apt_repository:
    repo: "{{ item.repo }}"
    filename: "{{ item.repo_file | default(omit) }}"
    state: "{{ (lookup('vars', item.flag) == 'absent') | ternary('absent', 'present') }}"
  register: repo_file
  when:
    - ansible_os_family == "Debian"
    - lookup('vars', item.flag, default=false)
    - item.repo is defined

- name: "software | {{ item.name }} | update sources (repo added or changed)"
  tags: "packages,{{ item.flag }},workstation-packages"
  ansible.builtin.apt:
    update_cache: yes
  changed_when: false
  when:
    - ansible_os_family == "Debian"
    - lookup('vars', item.flag, default=false)
    - repo_file.changed

- name: "software | {{ item.name }} | package"
  tags: "packages,{{ item.flag }},workstation-packages"
  ansible.builtin.apt:
    name: "{{ item.pkg }}"
    state: "{{ (lookup('vars', item.flag) == 'absent') | ternary('absent', 'present') }}" 
  when:
    - ansible_os_family == "Debian"
    - lookup('vars', item.flag, default=false)
